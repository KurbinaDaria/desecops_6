name: Create Release with Signature and SBOM

# Цей workflow запускається, коли ви створюєте новий тег (наприклад, v1.0.0)
on:
  push:
    tags:
      - 'v*.*.*' # Запускати для тегів, що схожі на v1.0.0, v1.2.3 тощо.

# Надаємо дозволи для GitHub Actions
permissions:
  contents: write      # Для створення релізів та завантаження артефактів
  id-token: write      # Для "keyless" підпису (OIDC) за допомогою Cosign
  security-events: write # Для завантаження результатів сканування (Scorecard)

jobs:
  # --- 1. ЗАВДАННЯ: Збірка "псевдобінаря" ---
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: make install

      - name: Run linter
        run: make lint

      - name: Build pseudo-binary
        run: make build # Створить scan_stream.pyz

      - name: Upload artifact (binary)
        uses: actions/upload-artifact@v4
        with:
          name: scan-binary
          path: scan_stream.pyz

  # --- 2. ЗАВДАННЯ: Генерація SBOM ---
  generate-sbom:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      # Ми використовуємо Syft для генерації SBOM з requirements.txt
      - name: Install Syft
        uses: anchore/sbom-action/download-syft@v0.15.9

      - name: Generate SBOM
        run: |
          syft packages -r requirements.txt -o spdx-json=sbom.spdx.json

      - name: Upload artifact (SBOM)
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.spdx.json

  # --- 3. ЗАВДАННЯ: Підпис та створення релізу ---
  sign-and-release:
    # Це завдання залежить від успішного виконання попередніх двох
    needs: [build, generate-sbom]
    runs-on: ubuntu-latest
    steps:
      - name: Download binary artifact
        uses: actions/download-artifact@v4
        with:
          name: scan-binary

      - name: Download SBOM artifact
        uses: actions/download-artifact@v4
        with:
          name: sbom

      # Встановлюємо Cosign для підпису
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.4.0

      # "Keyless" підпис: Cosign використовує OIDC токен GitHub Actions
      # для автентифікації та підпису артефакту
      - name: Sign the binary with Cosign
        run: |
          cosign sign-blob --yes --output-signature binary.sig scan_stream.pyz
          cosign sign-blob --yes --output-signature sbom.sig sbom.spdx.json

      # Створюємо реліз і прикріплюємо до нього всі файли
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          # ${GITHUB_REF_NAME} автоматично візьме назву тегу (напр. v1.0.0)
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            scan_stream.pyz
            binary.sig
            sbom.spdx.json
            sbom.sig